{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../public/css/bootstrap.min.css';\nimport '../public/css/animate.min.css';\nimport '../public/css/flaticon.css';\nimport '../public/css/fontawesome.min.css';\nimport '../node_modules/react-modal-video/css/modal-video.min.css';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport '../public/css/style.css'; // import '../public/css/rtl.css';\n\nimport '../public/css/responsive.css';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport React from 'react';\nimport Loader from '../components/Shared/Loader';\nimport GoTop from '../components/Shared/GoTop';\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: true\n    });\n  }\n\n  componentDidMount() {\n    this.timerHandle = setTimeout(() => this.setState({\n      loading: false\n    }), 2000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerHandle) {\n      clearTimeout(this.timerHandle);\n      this.timerHandle = 0;\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    }), __jsx(\"title\", null, \"Bariton - React Next IT & Machine Learning Template\")), __jsx(Component, pageProps), __jsx(Loader, {\n      loading: this.state.loading\n    }), __jsx(GoTop, {\n      scrollStepInPx: \"50\",\n      delayInMs: \"10.50\"\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}